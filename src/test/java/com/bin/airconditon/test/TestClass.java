package com.bin.airconditon.test;


import org.omg.CORBA.BAD_PARAM;
import org.springframework.util.StringUtils;

import javax.swing.text.EditorKit;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class TestClass {

    public static List<String> list = new ArrayList<>();

    public static void main(String[] args) throws ParseException {

//        Date date = new Date();
//        System.out.println(date);
//        System.out.println(date.getClass());
//        SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
//        Date parse = simpleDateFormat.parse("2020-11-5 16:01:22");
//        String time = simpleDateFormat.format(parse);
//        System.out.println(parse);
//        String date2 = simpleDateFormat.format(date);
//        String date2 = simpleDateFormat.format(new Date(""));
//        System.out.println(date2);
        String str = "**01,N,34,13,E,108,54,20,11,4,3,49,57##\n" +
                "**02,0,0,0,0,0,0,0##\n" +
                "**03,0,0,0,0,0,0,0,0,0,0,0,0,0.000##\n" +
                "**04,0,0,0,0,0,0,0,0,0,0,0,0##\n" +
                "**05,0,0,0,0,0##\n" +
                "**06,0,0,0.000,0,0,0.000##\n" +
                "**07,0,0,0,0,0,0##\n" +
                "**08,0,0,0,0.000,0.000,0##\n" +
                "**09,01,0,0,0,0,0,0,0,0##\n" +
                "**09,02,0,0,0,0,0,0,0,0##\n" +
                "**09,03,0,0,0,0,0,0,0,0##\n" +
                "**09,04,0,0,0,0,0,240,0,0##\n" +
                "**09,05,0,0,0,0,0,0,0,0##\n" +
                "**09,06,0,0,0,0,0,0,0,0##\n" +
                "**10,01,01,0.000,0.000,0.000,0.000,0.000,0.000,0.000##\n" +
                "**10,01,02,0.000,0.000,0.000,0.000,0.000,0.000,0.000##\n" +
                "**10,01,03,0.000,0.000,0.000,0.000,0.000,0.000,0.000##\n" +
                "**10,01,04,0.000,0.000,0.000,0.000,0.000,0.000,0.000##\n" +
                "**10,01,05,0.000,0.000,0.000,0.000,0.000,0.000,0.000##\n" +
                "**10,01,06,0.000,0.000,0.000,0.000,0.000,0.000,0.000##\n" +
                "**10,01,07,0.000,0.000,0.000,0.000,0.000,0.000,0.000##\n" +
                "**10,01,08,0.000,0.000,0.000,0.000,0.000,0.000,0.000##\n" +
                "**10,01,09,0.000,0.000,0.000,0.000,0.000,0.000,0.000##\n" +
                "**10,02,01,0.000,0.000,0.000,0.000,0.000,0.000,0.000##\n" +
                "**10,02,02,0.000,0.000,0.000,0.000,0.000,0.000,0.000##\n" +
                "**10,02,03,0.000,0.000,0.000,0.000,0.000,0.000,0.000##\n" +
                "**10,02,04,0.000,0.000,0.000,0.000,0.000,0.000,0.000##\n" +
                "**10,02,05,0.000,0.000,0.000,0.000,0.000,0.000,0.000##\n" +
                "**10,02,06,0.000,0.000,0.000,0.000,0.000,0.000,0.000##\n" +
                "**10,02,07,0.000,0.000,0.000,0.000,0.000,0.000,0.000##\n" +
                "**10,02,08,0.000,0.000,0.000,0.000,0.000,0.000,0.000##\n" +
                "**10,02,09,0.000,0.000,0.000,0.000,0.000,0.000,0.000##\n" +
                "**10,03,01,0.000,0.000,0.000,0.000,0.000,0.000,0.000##\n" +
                "**10,03,02,0.000,0.000,0.000,0.000,0.000,0.000,0.000##\n" +
                "**10,03,03,0.000,0.000,0.000,0.000,0.000,0.000,0.000##\n" +
                "**10,03,04,0.000,0.000,0.000,0.000,0.000,0.000,0.000##\n" +
                "**10,03,05,0.000,0.000,0.000,0.000,0.000,0.000,0.000##\n" +
                "**10,03,06,0.000,0.000,0.000,0.000,0.000,0.000,0.000##\n" +
                "**10,03,07,0.000,0.000,0.000,0.000,0.000,0.000,0.000##\n" +
                "**10,03,08,0.000,0.000,0.000,0.000,0.000,0.000,0.000##\n" +
                "**10,03,09,0.000,0.000,0.000,0.000,0.000,0.000,0.000##\n" +
                "**10,04,01,0.000,0.000,0.000,0.000,0.000,0.000,0.000##\n" +
                "**10,04,02,0.000,0.000,0.000,0.000,0.000,0.000,0.000##\n" +
                "**10,04,03,0.000,0.000,0.000,0.000,0.000,0.000,0.000##\n" +
                "**10,04,04,0.000,0.000,0.000,0.000,0.000,0.000,0.000##\n" +
                "**10,04,05,0.000,0.000,0.000,0.000,0.000,0.000,0.000##\n" +
                "**10,04,06,0.000,0.000,0.000,0.000,0.000,0.000,0.000##\n" +
                "**10,04,07,0.000,0.000,0.000,0.000,0.000,0.000,0.000##\n" +
                "**10,04,08,0.000,0.000,0.000,0.000,0.000,0.000,0.000##\n" +
                "**10,04,09,0.000,0.000,0.000,0.000,0.000,0.000,0.000##\n" +
                "**10,05,01,0.000,0.000,0.000,0.000,0.000,0.000,0.000##\n" +
                "**10,05,02,0.000,0.000,0.000,0.000,0.000,0.000,0.000##\n" +
                "**10,05,03,0.000,0.000,0.000,0.000,0.000,0.000,0.000##\n" +
                "**10,05,04,0.000,0.000,0.000,0.000,0.000,0.000,0.000##\n" +
                "**10,05,05,0.000,0.000,0.000,0.000,0.000,0.000,0.000##\n" +
                "**10,05,06,0.000,0.000,0.000,0.000,0.000,0.000,0.000##\n" +
                "**10,05,07,0.000,0.000,0.000,0.000,0.000,0.000,0.000##\n" +
                "**10,05,08,0.000,0.000,0.000,0.000,0.000,0.000,0.000##\n" +
                "**10,05,09,0.000,0.000,0.000,0.000,0.000,0.000,0.000##\n" +
                "**10,06,01,0.000,0.000,0.000,0.000,0.000,0.000,0.000##\n" +
                "**10,06,02,0.000,0.000,0.000,0.000,0.000,0.000,0.000##\n" +
                "**10,06,03,0.000,0.000,0.000,0.000,0.000,0.000,0.000##\n" +
                "**10,06,04,0.000,0.000,0.000,0.000,0.000,0.000,0.000##\n" +
                "**10,06,05,0.000,0.000,0.000,0.000,0.000,0.000,0.000##\n" +
                "**10,06,06,0.000,0.000,0.000,0.000,0.000,0.000,0.000##\n" +
                "**10,06,07,0.000,0.000,0.000,0.000,0.000,0.000,0.000##\n" +
                "**10,06,08,0.000,0.000,0.000,0.000,0.000,0.000,0.000##\n" +
                "**10,06,09,0.000,0.000,0.000,0.000,0.000,0.000,0.000##\n";
        getInfo(str, "**", "##");
        System.out.println(list);
        System.out.println(list.size());
        for (String s : list) {
            System.out.println(s);
        }
    }

    public static void getInfo(String infoStr, String beginStr, String endStr) {
        int lastIndexOfEnd = infoStr.lastIndexOf(endStr);
        int beginIndex = 0;
        while (beginIndex < lastIndexOfEnd) {
            int begin = infoStr.indexOf(beginStr, beginIndex);
            int end = infoStr.indexOf(endStr, beginIndex);
            list.add(infoStr.substring(begin + 2, end));
            beginIndex = end + 1;
        }
    }

}
